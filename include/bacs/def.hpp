#pragma once

#ifndef _XOPEN_SOURCE
#   define _XOPEN_SOURCE 600
#endif

#include <string>
#include <sstream>

#include <bunsan/stream_enum.hpp>

namespace bacs {

using namespace std;

typedef const string &cstr;

#define VERSION "2.3.alpha Linux"

#define CONFIG_FILE_NAME "bacs2.conf"

BUNSAN_STREAM_ENUM_INITIALIZED(ST,
(
    (ST_SERVER_ERROR, 0),
    (ST_ACCEPTED, 1),
    (ST_COMPILE_ERROR, 2),
    (ST_MEMORY_LIMIT, 3),
    (ST_TIME_LIMIT, 4),
    (ST_RUNTIME_ERROR, 5),
    (ST_WRONG_ANSWER, 6),
    (ST_PRESENTATION_ERROR, 7),
    (ST_SECURITY_VIOLATION, 8),
    (ST_INVALID_PROBLEM, 9),
    (ST_REALTIME_LIMIT, 10),
    (ST_OUTPUT_LIMIT, 11),
    (ST_COMPILE_TIME_LIMIT, 12),
    (ST_PENDING, 100),
    (ST_RUNNING, 101),
    (ST_INVALID_LANG, 102),
    (ST_CHECKER_ERROR, 103)
))

BUNSAN_STREAM_ENUM_INITIALIZED(STATE,
(
    (STATE_NO, 0),
    (STATE_COMPILING, 1)
))

BUNSAN_STREAM_ENUM_INITIALIZED(SOURCE_TYPE,
(
    (SOURCE_TYPE_SUBMIT, 1),
    (SOURCE_TYPE_CHECKER, 2)
))

BUNSAN_STREAM_ENUM_INITIALIZED(RUN,
(
    (RUN_OK, 0),
    (RUN_FAILED, 1),
    (RUN_TIMEOUT, 2),
    (RUN_OUT_OF_MEMORY, 3),
    (RUN_ABNORMAL_EXIT, 4),
    (RUN_REALTIMEOUT, 5),
    (RUN_OUTPUT_LIMIT, 6)
))

BUNSAN_STREAM_ENUM_INITIALIZED(CHECK_RES,
(
    (CHECK_RES_OK, 0),
    (CHECK_RES_WA, 5),
    (CHECK_RES_PE, 4),
    (CHECK_RES_WA_OLD, 2)
))

BUNSAN_STREAM_ENUM_INITIALIZED(COMPILE,
(
    (COMPILE_OK, 0),
    (COMPILE_ERROR, 1),
    (COMPILE_FAILED, 2),
    (COMPILE_TIME_LIMIT, 3)
))

#define INVALID_ID 9999

#define JOB_QUERY_PERIOD 500

} // bacs
